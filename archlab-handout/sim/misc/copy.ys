irmovq 0x100, %rsp
irmovq src, %rdi
irmovq dest, %rsi
irmovq 3, %rdx
call copy_block

copy_block:
    pushq %r12
    pushq %r13
    pushq %r14
    irmovq 8, %r14          # r14 = 8
    irmovq 1, %r13          # r13 = 1
    irmovq 0, %rax          # result = 0
loop_start:
    andq %rdx, %rdx
    je loop_end             # while(len>0)

    mrmovq (%rdi), %r12     # r12 : val = (*src)
    addq %r14, %rdi         # src++
    rmmovq %r12, (%rsi)     # (*dest) = val
    addq %r14, %rsi         # dest++
    xorq %r12, %rax         # result ^= val
    subq %r13, %rdx         # len--

    jmp loop_start
loop_end:
    popq %r14
    popq %r13
    popq %r12
    ret

.align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333
